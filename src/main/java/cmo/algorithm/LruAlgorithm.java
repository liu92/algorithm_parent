package cmo.algorithm;

/**
 * LRU算法作为内存管理的一种有效算法,其含义是在内存有限的情况下，当内存容量不足时，
 * 为了保证程序的运行，这时就不得不淘汰内存中的一些对象，释放这些对象占用的空间，
 * 那么选择淘汰哪些对象呢？LRU算法就提供了一种策略，告诉我们选择最近一段时间内，
 * 最久未使用的对象将其淘汰，至于为什么要选择最久未使用的，
 * 可以想想，最近一段时间内使用的东西，我们是不是可能一会又要用到呢~，
 * 而很长一段时间内都没有使用过的东西，也许永远都不会再使用
 * @author
 */
public class LruAlgorithm {

    /**
     * LRU 采用的是队列 FIFO(先进先出)的算法 最先进来的如果在很长一段时间没有被使用，那么将这个存放最久的淘汰掉
     * LRU算法最为精典的实现 就是HashMap+Double LinkedList
     */


}
